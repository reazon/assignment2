<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.sakaiproject</groupId>
		<artifactId>sakai-assignment2-base</artifactId>
		<version>SNAPSHOT</version>
	</parent>
	<name>sakai-assignment2-tool</name>
	<groupId>org.sakaiproject</groupId>
	<artifactId>sakai-assignment2-tool</artifactId>
	<description>
		This project creates a WAR containing the Assignment2 Tool for
		Sakai.
	</description>
	<packaging>war</packaging>
	<properties>
		<sakairsf.sakai.version>2.2.x</sakairsf.sakai.version>
		<rsfutil.version>0.7.2</rsfutil.version>
	</properties>
	<repositories>
		<repository>
			<id>caret-dev</id>
			<name>Caret Dev Repo</name>
			<layout>default</layout>
			<url>http://www2.caret.cam.ac.uk/maven2dev</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>uk.org.ponder.sakairsf</groupId>
			<artifactId>SakaiRSFComponents-templates</artifactId>
			<version>
				${rsfutil.version}-sakai_${sakairsf.sakai.version}
			</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>uk.org.ponder.sakairsf</groupId>
			<artifactId>SakaiRSFComponents-evolvers</artifactId>
			<version>
				${rsfutil.version}-sakai_${sakairsf.sakai.version}
			</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>uk.org.ponder.sakairsf</groupId>
			<artifactId>sakairsf</artifactId>
			<version>
				${rsfutil.version}-sakai_${sakairsf.sakai.version}
			</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>uk.org.ponder.rsfutil</groupId>
			<artifactId>RSFComponents-templates</artifactId>
			<version>${rsfutil.version}</version>
			<type>war</type>
		</dependency>

		<!-- Sakai dependencies (all RSF apps must have this) -->
		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-util</artifactId>
			<version>${sakai.version}</version>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-util-api</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-component</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-assignment2-logic-api</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-authz-api</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-component-api</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-tool-api</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-component-api</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-assignment2-model</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject.entitybroker</groupId>
			<artifactId>entitybroker-api</artifactId>
			<version>1.2.0</version>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-user-api</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-entity-api</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-site-api</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-content-api</artifactId>
			<version>${sakai.version}</version>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-email-api</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.sakaiproject</groupId>
			<artifactId>sakai-scheduler-api</artifactId>
			<version>${sakai.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Apache commons dependencies -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.0.4</version>
			<scope>provided</scope>
		</dependency>
		<!-- Spring dependency -->
		<dependency>
			<groupId>${sakai.spring.groupId}</groupId>
			<artifactId>${sakai.spring.artifactId}</artifactId>
			<version>${sakai.spring.version}</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>
	<build>
		<resources>
			<resource>
				<targetPath>bundle</targetPath>
				<directory>${basedir}/../bundle</directory>
				<includes>
					<include>**/*.properties</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includeTypes>war</includeTypes>
							<outputDirectory>
								${project.build.directory}/webapp/
							</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>
								true
							</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>

