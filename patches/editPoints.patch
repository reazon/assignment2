Index: impl/src/test/org/sakaiproject/assignment2/logic/test/stubs/GradebookServiceStub.java
===================================================================
--- impl/src/test/org/sakaiproject/assignment2/logic/test/stubs/GradebookServiceStub.java (revision 82511)
+++ impl/src/test/org/sakaiproject/assignment2/logic/test/stubs/GradebookServiceStub.java (working copy)
@@ -895,10 +895,4 @@
 		return false;
 	}
 	
-    public PointsPossibleValidation isPointsPossibleValid(String gradebookUid, 
-                                                          Assignment gradebookItem,  
-                                                          Double pointsPossible)
-    {
-        return  PointsPossibleValidation.VALID;
-    }
 
     @Override
     public Map getCalculatedCourseGrade(String arg0, boolean arg1) {

Index: impl/src/java/org/sakaiproject/assignment2/logic/impl/ExternalGradebookLogicImpl.java
===================================================================
--- impl/src/java/org/sakaiproject/assignment2/logic/impl/ExternalGradebookLogicImpl.java       (revision 82511)
+++ impl/src/java/org/sakaiproject/assignment2/logic/impl/ExternalGradebookLogicImpl.java       (working copy)
@@ -52,7 +52,6 @@
 import org.sakaiproject.service.gradebook.shared.GradebookNotFoundException;
 import org.sakaiproject.service.gradebook.shared.GradebookService;
 import org.sakaiproject.service.gradebook.shared.InvalidGradeException;
-import org.sakaiproject.service.gradebook.shared.GradebookService.PointsPossibleValidation;
 import org.sakaiproject.site.api.Group;
 
 /**
@@ -415,10 +414,6 @@
         
         assignmentGbItem.setDueDate(gbItem.getDueDate());
         
-       if (isPointsPossibleValid(contextId, gbItem)  == PointsPossibleValidation.VALID) {
-            assignmentGbItem.setPoints(gbItem.getPointsPossible());
-        }
-
         String oldName = assignmentGbItem.getName();
         
         
@@ -937,11 +932,4 @@
         return safeAssignmentName;
     }
 
-    public PointsPossibleValidation isPointsPossibleValid(String gradebookUid, GradebookItem gradebookItem)
-    {
-        Assignment assignment = gradebookService.getAssignment(gradebookUid, gradebookItem.getGradebookItemId());
-        
-        return gradebookService.isPointsPossibleValid(gradebookUid, assignment, gradebookItem.getPointsPossible());
-    }
-    
 }
Index: impl/src/java/org/sakaiproject/assignment2/logic/impl/AssignmentLogicImpl.java
===================================================================
--- impl/src/java/org/sakaiproject/assignment2/logic/impl/AssignmentLogicImpl.java      (revision 82511)
+++ impl/src/java/org/sakaiproject/assignment2/logic/impl/AssignmentLogicImpl.java      (working copy)
@@ -480,15 +480,6 @@
                     updateGradebook = true;
                 }
             }
-                        
-            if (assignment.getGradebookPointsPossible() != null && // this needs to be checked because if this is called
-                                                           // by updateEntity() during an JS inline title rename
-                                                           // PointsPossible will be null 
-                    gbItem.getPointsPossible() != assignment.getGradebookPointsPossibleDouble()) {
-                
-                gbItem.setPointsPossible(assignment.getGradebookPointsPossibleDouble());
-                updateGradebook = true;
-            }
 
             if (updateGradebook) {
                 gradebookLogic.updateGbItemInGradebook(assignment.getContextId(), gbItem);
Index: api/src/java/org/sakaiproject/assignment2/model/Assignment2.java
===================================================================
--- api/src/java/org/sakaiproject/assignment2/model/Assignment2.java    (revision 82511)
+++ api/src/java/org/sakaiproject/assignment2/model/Assignment2.java    (working copy)
@@ -76,10 +76,6 @@
     private Set<AssignmentGroup> assignmentGroupSet; 
     private Map properties;
 
-    /* This variable is NOT persisted to the database.  It is simply used to carry-over the gradebook
-     * points possible value on the Edit Assignment page
-     */
-    private String gradebookPointsPossible;
     
     
     /**
@@ -850,27 +846,4 @@
         this.modelAnswerAttachmentSet = modelAnswerAttachmentSet;
     }
     
-    public String getGradebookPointsPossible() {
-        return gradebookPointsPossible;
-    }
-    
-    public void setGradebookPointsPossible(String gradebookPointsPossible) {
-        this.gradebookPointsPossible = gradebookPointsPossible;
-    }
-
-    /**
-     * This method throws an exception if value isn't convertible into a double.
-     * null is okay
-     * @return
-     * @throws java.lang.NumberFormatException
-     */
-    public Double getGradebookPointsPossibleDouble() throws java.lang.NumberFormatException {
-        Double points = null;
-        
-        if (gradebookPointsPossible != null) {
-            points = Double.parseDouble(gradebookPointsPossible);
-        }
-        
-        return points;
-    }
 }
Index: api/src/java/org/sakaiproject/assignment2/logic/ExternalGradebookLogic.java
===================================================================
--- api/src/java/org/sakaiproject/assignment2/logic/ExternalGradebookLogic.java (revision 82511)
+++ api/src/java/org/sakaiproject/assignment2/logic/ExternalGradebookLogic.java (working copy)
@@ -33,7 +33,6 @@
 import org.sakaiproject.assignment2.model.constants.AssignmentConstants;
 import org.sakaiproject.authz.api.Role;
 import org.sakaiproject.service.gradebook.shared.Assignment;
-import org.sakaiproject.service.gradebook.shared.GradebookService.PointsPossibleValidation;
 import org.sakaiproject.site.api.Group;
 
 /**
@@ -512,12 +511,4 @@
      */
     public String getFreeAssignmentName(String gradebookUid, String assignmentTitle);
 
-    /**
-     * 
-     * @param gradebookUid
-     * @param gradebookItem
-     * @return
-     */
-    public PointsPossibleValidation isPointsPossibleValid(String gradebookUid, GradebookItem gradebookItem);
-    
 }
Index: tool/src/java/org/sakaiproject/assignment2/tool/beans/Assignment2Validator.java
===================================================================
--- tool/src/java/org/sakaiproject/assignment2/tool/beans/Assignment2Validator.java     (revision 82511)
+++ tool/src/java/org/sakaiproject/assignment2/tool/beans/Assignment2Validator.java     (working copy)
@@ -26,7 +26,6 @@
 import org.sakaiproject.assignment2.model.Assignment2;
 import org.sakaiproject.assignment2.model.constants.AssignmentConstants;
 
-import org.sakaiproject.service.gradebook.shared.GradebookService.PointsPossibleValidation;
 import org.sakaiproject.assignment2.logic.GradebookItem;
 
 import uk.org.ponder.messageutil.TargettedMessage;
@@ -89,52 +88,6 @@
                 valid = false;
             }
         
-            try {
-                assignment.getGradebookPointsPossibleDouble();
-            }
-            catch (NumberFormatException e) {
-                messages.addMessage(new TargettedMessage("assignment2.assignment_add.invalid_gradebook_points", 
-                        new Object[] {}, "Assignment2."+ key + ".gradebookPoints"));    
-                valid = false;
-            }
-            
-            // if the double convert attempt fails we don't want/need for the following to execute
-            if (valid) {
-                // check if the points possible is valid        
-                GradebookItem gbItem = new GradebookItem();
-                gbItem.setGradebookItemId(assignment.getGradebookItemId());
-                gbItem.setTitle(assignment.getTitle());
-                gbItem.setPointsPossible(assignment.getGradebookPointsPossibleDouble());
-
-                PointsPossibleValidation result =  
-                    externalGradebookLogic.isPointsPossibleValid(assignment.getContextId(),
-                                                                 gbItem);
-                if (result != PointsPossibleValidation.VALID) {
-                    switch(result) {
-                    case INVALID_DECIMAL: {
-                        messages.addMessage(new TargettedMessage("assignment2.assignment_add.invalid_gradebook_points", 
-                                new Object[] {}, "Assignment2."+ key + ".gradebookPoints"));
-                        break;
-                    }
-                    case INVALID_NULL_VALUE: {
-                        messages.addMessage(new TargettedMessage("assignment2.assignment_add.invalid_gradebook_points", 
-                                new Object[] {}, "Assignment2."+ key + ".gradebookPoints"));
-                        break;
-                    }
-                    case INVALID_NUMERIC_VALUE: {
-                        messages.addMessage(new TargettedMessage("assignment2.assignment_add.invalid_gradebook_points", 
-                                new Object[] {}, "Assignment2."+ key + ".gradebookPoints"));
-                        break;
-                    }
-                    default: {
-                        messages.addMessage(new TargettedMessage("assignment2.assignment_add.invalid_gradebook_points", 
-                                new Object[] {}, "Assignment2."+ key + ".gradebookPoints"));
-                    }
-                    } // end switch
-
-                    valid = false;
-                } // end if result !=
-            } // end if valid
         } // end if isGraded()
 
 
Index: tool/src/java/org/sakaiproject/assignment2/tool/producers/AssignmentProducer.java
===================================================================
--- tool/src/java/org/sakaiproject/assignment2/tool/producers/AssignmentProducer.java	(revision 83036)
+++ tool/src/java/org/sakaiproject/assignment2/tool/producers/AssignmentProducer.java	(working copy)
@@ -501,27 +501,7 @@
             } else {
                 UIMessage.make(tofill, "grading_warning", "assignment2.assignment_add.grading_warning.no_add");
             }
-
-            String pointsPossibleString = messageLocator.getMessage("assignment2.details.gradebook.points_possible");
             
-            if (externalGradebookLogic.getGradebookGradeEntryType(assignment.getContextId()) == externalGradebookLogic.ENTRY_BY_PERCENT) {
-                pointsPossibleString = messageLocator.getMessage("assignment2.details.gradebook.percent_possible");
-            }
-            
-            if (assignment.getGradebookItemId() != null && externalGradebookLogic.gradebookItemExists(assignment.getGradebookItemId())) {
-                
-                GradebookItem gradebookItem = externalGradebookLogic.getGradebookItemById(assignment.getContextId(), assignment.getGradebookItemId());
-                
-                if (! gradebookItem.isUngraded()) {
-                    assignment.setGradebookPointsPossible(gradebookItem.getPointsPossible().toString());
-                }
-            }
-
-
-            UIOutput.make(form, "gradebook_points_label", pointsPossibleString);
-
-            UIInput.make(form, "gradebook_points", assignment2OTP + ".gradebookPointsPossible");
-            
             UIVerbatim.make(tofill, "contextId", "asnn2.contextId = \"" + externalLogic.getCurrentContextId() + "\";");
             
             // Error indicator if assignment graded but no gb item selected
Index: tool/src/webapp/content/js/assignment.js
===================================================================
--- tool/src/webapp/content/js/assignment.js    (revision 82511)
+++ tool/src/webapp/content/js/assignment.js    (working copy)
@@ -60,9 +60,6 @@
     update_resubmit_until();
     asnn2.initializeSorting();
     
-    if (jQuery("input[name='page-replace\:\:gradebook_points']").size() > 0) {
-        enableDisableGradebookPoints();
-    }
 });
 
 function slide_submission(img) {
@@ -461,8 +458,6 @@
         } else {
             jQuery("input[type='radio'][id='page-replace\:\:select_ungraded']").get(0).checked = true;
         }
-        
-        enableDisableGradebookPoints();
     };
 
     /**
@@ -482,7 +477,6 @@
         asnn2.populateTitleWithGbItemName();
         asnn2.populateDueDateWithGBItemDueDate();
         asnn2.showHideGradeSettingError();
-        asnn2.populateGradebookPoints();
 
     };
 
Index: tool/src/webapp/content/templates/assignment.html
===================================================================
--- tool/src/webapp/content/templates/assignment.html   (revision 83808)
+++ tool/src/webapp/content/templates/assignment.html   (working copy)
@@ -248,14 +248,14 @@
                       </span>
                       <div id="grading_options">
                         <div class="liItem">
-                            <input rsf:id="select_ungraded" id="select_ungraded" name="graded" type="radio" onclick="asnn2.showHideGradeSettingError();enableDisableGradebookPoints();"/> 
+                            <input rsf:id="select_ungraded" id="select_ungraded" name="graded" type="radio" onclick="asnn2.showHideGradeSettingError();"/> 
                             <label for="select_ungraded" rsf:id="select_ungraded_label">This assignment is ungraded</label>
                         </div>
                         <div class="liItem">
-                            <input rsf:id="select_graded" id="select_graded" name="graded" type="radio" onclick="asnn2.showHideGradeSettingError();enableDisableGradebookPoints();asnn2.populateGradebookPoints()"/> 
+                            <input rsf:id="select_graded" id="select_graded" name="graded" type="radio" onclick="asnn2.showHideGradeSettingError();"/> 
                             <label for="select_graded" rsf:id="select_graded_label">This assignment is graded</label>
                             <span rsf:id="msg=assignment2.assignment_add.gradebook_associated"> and is associated with a Gradebook Item:</span> 
-                                <select rsf:id="gradebook_item" onchange="asnn2.selectGraded();asnn2.populateTitleWithGbItemName();asnn2.showHideGradeSettingError();asnn2.populateGradebookPoints();">
+                                <select rsf:id="gradebook_item" onchange="asnn2.selectGraded();asnn2.populateTitleWithGbItemName();asnn2.showHideGradeSettingError();">
                                     <option value="">Select a Gradebook Item</option>
                                     <option value="GB Item 1">GB Item 1</option>
                                     <option value="GB Item 2">GB Item 2</option>
@@ -263,10 +263,6 @@
                                     <option value="GB Item 4">GB Item 4</option>
                                 </select>
                                 &nbsp;
-                                <span>
-                                    <label for="gradebook_points" id="gradebook_points_label" rsf:id="gradebook_points_label">Points:</label>
-                                    <input id="gradebook_points" rsf:id="gradebook_points" size="8" value="0" />
-                                </span>
                                 <script rsf:id="contextId" type="text/javascript" />
                                 
                                 <p class="indent" rsf:id="create_new_gb_item">
Index: impl/src/test/org/sakaiproject/assignment2/logic/test/stubs/GradebookServiceStub.java
===================================================================
--- impl/src/test/org/sakaiproject/assignment2/logic/test/stubs/GradebookServiceStub.java (revision 82511)
+++ impl/src/test/org/sakaiproject/assignment2/logic/test/stubs/GradebookServiceStub.java (working copy)
@@ -42,7 +42,6 @@
 import org.sakaiproject.service.gradebook.shared.GradebookNotFoundException;
 import org.sakaiproject.service.gradebook.shared.GradebookService;
 import org.sakaiproject.service.gradebook.shared.StaleObjectModificationException;
-import org.sakaiproject.service.gradebook.shared.GradebookService.PointsPossibleValidation;
 import org.sakaiproject.service.gradebook.shared.Assignment;
 
 /**
